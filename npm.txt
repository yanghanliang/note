当你为你的模块安装一个依赖模块时，正常情况下你得先安装他们（在模块根目录下npm install module-name），然后连同版本号手动将他们添加到模块配置文件package.json中的依赖里（dependencies）。

-save和save-dev可以省掉你手动修改package.json文件的步骤。
npm install module-name -save自动把模块和版本号添加到dependencies部分
npm install module-name -save-dve自动把模块和版本号添加到devdependencies部分

###

npm init
npm init -y   创建一个package.json文件(快捷方法)

###

npm i art-template --save

###

npm i -S formidable --save

###

nodemon 可以实现node代码的自动重启

安装:
	npm install --global nodemon  //-g 全局安装
	简写: npm i nodemon -g

运行项目:

###

格式化时间
npm i moment

var moment = require("moment");
var time = new Date();
var newTime = moment(time).format("YYYY-MM-DD HH:mm:ss");

###

// express是基于node的web前端框架
// 安装:
npm install express --save

###

安装: express-art-template
npm install --save art-template
npm install --save express-art-template

注意点:
当注册完成之后需要修改后缀名,

###

安装框架
npm install express


##

npm i cookie-session

---------------------------yarn && npm 常用命令----------------------------

安装 yarn

npm install --global yarn

yarn设置淘宝镜像
yarn config set registry https://registry.npm.taobao.org

设置代理
npm config set https-proxy http://127.0.0.1:12639
npm config set proxy http://127.0.0.1:12639

npm init
# yarn init

npm init -y    					// 默认 yes
# yarn init -y

# yarn add 包名  				// 安装
npm install 包名

npm i husky@^1.3.1 				// 安装某个版本下的包

# yarn remove  					// 卸载
npm uninstall  包名

# yarn add --dev (或者 -D) 包名
npm install --save-dev  		// 开发依赖

# yarn global add 包名			// 全局安装与卸载
npm install --global 包名

# yarn global remove 包名
npm uninstall --global 包名

# yarn install 或者  yarn
npm install

---

### 私有化 npm 仓库

# 注册用户

根据提示输入用户名，密码，邮箱 （后面发布代码需要使用这三个资料）
```
npm adduser --registry http://npm.svon.org
```

# 修改 npm 源

```
npm config set registry http://npm.svon.org
```

# 发布代码

```
npm login         // 登录

npm publish   // 发布
```

# 撤销包
```

npm unpublish 包名 --force

```

---

npm install报错类似于npm WARN tar ENOENT: no such file or directory, open '***\node_modules\.staging\***

`
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\wrapperReverse.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\wrapperValue.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\xor.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\xorBy.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\xorWith.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\zip.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\zipAll.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\zipObj.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\zipObject.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\zipObjectDeep.js'
npm WARN tar ENOENT: no such file or directory, open 'D:\project\company\YYBLayerFlowAbtest\vue-src\node_modules\.staging\lodash-661abd79\fp\zipWith.js'
`

解决方法:
删除文件 package-lock.json，再重新执行npm i或者npm install